<!DOCTYPE html>
<html ng-app="app">
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
  </head>
  <body>
    <h1><%= title %></h1>

    <ng-view></ng-view>

    <!-- Libraries -->
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular-route.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular-resource.min.js"></script>
    
    <script type="text/javascript">
        if (window.location.hash && window.location.hash == '#_=_') {
            window.location.hash = '';
        }
    </script>

    <!-- Template -->
    <script type="text/ng-template" id="/songs.html">
      New Song <input type="text" ng-model="newSong"><button ng-click="save()">Create</button>
      Search: <input type="text" ng-model="search.name">
      <select ng-model="" ng-options="status as status for status in statusList"></select>
      <ul>
        <li ng-repeat="song in songs | filter: search">
          <!--<input type="text" ng-model="song.status">-->
          <a href="#/{{song._id}}">{{song.name}}</a>
        </li>
      </ul>
    </script>

    <script type="text/ng-template" id="/songDetails.html">
      <h1>{{ song.name }}</h1>
      <button ng-click="updateSong()">Update</button>
      status: <select ng-model="song.status" ng-options="status for status in statusList"></select><br/>
      lyrics: <textarea ng-model="song.lyrics" style="width:70%;height:200px"></textarea>
      <br />
      <div ng-repeat="audioUrl in song.audioUrls">
          <audio src="{{audioUrl + '?raw=1' | trustAsResourceUrl}}"  controls autoplay loop></audio>
          <a href="{{audioUrl + '?dl=1'}}">Download</a>
          <br />
          audioUrl: <input type="text" ng-model="song.audioUrls[$index]"><button ng-click="updateAudioUrl($index)">Edit</button><button ng-click="deleteAudioUrl($index)">Delete</button>
      </div> 
      <div ng-hide="song.audioUrls.length">No audio</div>     
      New Audio Url: <input type="text" ng-model="newAudioUrl"><button ng-click="saveAudioUrl()">Add</button>
      
      <div ng-repeat="videoUrl in song.videoUrls">
          <iframe id="ytplayer" type="text/html" width="640" height="390"
            src="{{'https://www.youtube.com/embed/' + videoUrl.split('watch?v=')[1] | trustAsResourceUrl}}"
            frameborder="0"></iframe><!-- + '?autoplay=1' -->
          videoUrl: <input type="text" ng-model="song.videoUrls[$index]"><button ng-click="updateVideoUrl($index)">Edit</button><button ng-click="deleteVideoUrl($index)">Delete</button>
      </div> 
      <div ng-hide="song.videoUrls.length">No video</div>     
      New Video Url: <input type="text" ng-model="newVideoUrl"><button ng-click="saveVideoUrl()">Add</button>
      
      <div ng-repeat="comment in song.comments">
          Comment by: <input type="text" ng-model="comment.createUid">
          Content: <textarea ng-model="comment.body"></textarea><button ng-click="updateComment($index)">Edit</button><button ng-click="deleteComment($index)">Delete</button>
      </div> 
      <div ng-hide="song.comments.length">No Comment</div>     
      New Comment: <textarea ng-model="newComment"></textarea><button ng-click="saveComment()">Add</button>
    </script>

    <script>
      angular.module('app', ['ng', 'ngRoute', 'ngResource'])
      //ref: http://stackoverflow.com/questions/24163152/angularjs-ng-src-inside-of-iframe
        .filter('trustAsResourceUrl', ['$sce', function($sce) {
                return function(val) {
                    return $sce.trustAsResourceUrl(val);
                };
            }])
      
        //---------------
        // Services
        //---------------

        .factory('Songs', ['$resource', function($resource){
          return $resource('/songs/:id', null, {
            update:{method:'PUT'}
          });
        }])
       
        .factory('StatusList', ['$http', function($http){
            /*
            var statusList = [];
            
            $http.get('/songs/statusList/list').then(
                function successCallback(response) {
                    // this callback will be called asynchronously
                    // when the response is available.
                    //console.log('todos: ', data );
                    statusList = response.data;
                }, function errorCallback(response) {
                    // called asynchronously if an error occurs
                    // or server returns response with an error status.
                    statusList = [];
                    console.log('Get Status List error', response.data);
                }
            );
            
            return statusList;*/
            return $http.get('/songs/statusList/list');
        }])
        
        
        //---------------
        // Controllers
        //---------------

        .controller('SongController', ['$scope', 'Songs', 'StatusList', function ($scope, Songs, StatusList) {
          $scope.editing = [];
          $scope.songs = Songs.query();
          //$scope.statusList = StatusList;
          
          StatusList.then(
                function successCallback(response) {
                    // this callback will be called asynchronously
                    // when the response is available.
                    //console.log('todos: ', data );
                    $scope.statusList = response.data
                }, function errorCallback(response) {
                    // called asynchronously if an error occurs
                    // or server returns response with an error status.
                    $scope.statusList = [];
                    console.log('Get Status List error', response.data);
                }
            );
          
          //alert(StatusList);
          //$http({method: 'GET', url: '/songs/statusList/list'}).then(
          /*
          $http.get({url: '/songs/statusList/list'}).then(
                function successCallback(response) {
                    // this callback will be called asynchronously
                    // when the response is available.
                    //console.log('todos: ', data );
                    $scope.statusList = response.data;
                }, function errorCallback(response) {
                    // called asynchronously if an error occurs
                    // or server returns response with an error status.
                    $scope.statusList = [];
                    console.log('Get Status List error', response.data);
                }
            );
          */
          
          /*
            success(function(data, status, headers, config) {
                // this callback will be called asynchronously
                // when the response is available.
                //console.log('todos: ', data );
                $scope.statusList = data;
            }).
            error(function(data, status, headers, config) {
                // called asynchronously if an error occurs
                // or server returns response with an error status.
                $scope.statusList = [];
                console.log('Get Status List error', data);
            });
          */
          
          $scope.save = function(){
            if(!$scope.newSong || $scope.newSong.length < 1) return;
            
            var song = new Songs({name:$scope.newSong, status:"Lyrics"});
            
            song.$save(function(){
              $scope.songs.push(song);
              $scope.newSong = "";  //clear textbox
            });
          };
          
          $scope.update = function(index){
                var song = $scope.songs[index];
                Songs.update({id: song._id}, song);
                $scope.editing[index] = false;
            }

            $scope.edit = function(index){
                $scope.editing[index] = angular.copy($scope.songs[index]);
            }

            $scope.cancel = function(index){
                $scope.songs[index] = angular.copy($scope.editing[index]);
                $scope.editing[index] = false;
            }

        }])

        .controller('SongDetailCtrl', ['$scope', '$routeParams', 'Songs', 'StatusList', function ($scope, $routeParams, Songs, StatusList) {
          //$scope.song = Songs[$routeParams.id];
          //$scope.song = Songs.query()[$routeParams.id];
          //alert(Songs.status);
          //alert(Object.prototype.toString.call(Songs.query()));
          //alert(Object.prototype.toString.call(Songs.query()));
          //alert(Songs.query().length);
          //alert(Songs.get().status);
          //$scope.song = Songs.get({index:$routeParams.id})[0];
          //alert(Songs.get({index:$routeParams.id})["status"]);
          //alert(Object.prototype.toString.call(Songs.query()));
          
          $scope.song = Songs.get({id:$routeParams.id});
          //$scope.song.audioUrls = ['test'];
          
          StatusList.then(
                function successCallback(response) {
                    // this callback will be called asynchronously
                    // when the response is available.
                    //console.log('todos: ', data );
                    $scope.statusList = response.data
                }, function errorCallback(response) {
                    // called asynchronously if an error occurs
                    // or server returns response with an error status.
                    $scope.statusList = [];
                    console.log('Get Status List error', response.data);
                }
            );
          
          
          $scope.updateSong = function(){
              //alert('test');
              var song = $scope.song;
              //var id = song._id;
              //delete(song._id);
              //Songs.update({id: id}, song);  
              Songs.update({id: song._id}, song);
          };
          
          //Audio
          $scope.saveAudioUrl = function(){
              if(!$scope.newAudioUrl || $scope.newAudioUrl.length < 1) return;
              
              var song = $scope.song;
              song.audioUrls.push($scope.newAudioUrl);
              Songs.update({id: song._id}, song);
              
              $scope.newAudioUrl = "";
          };
          
          $scope.updateAudioUrl = function(index) {
              var song = $scope.song;
              Songs.update({id: song._id}, song);
          };
          
          $scope.deleteAudioUrl = function(index){
              var song = $scope.song;
              song.audioUrls.splice(index, 1);
              Songs.update({id: song._id}, song);
          }
          
          //Video
          $scope.saveVideoUrl = function(){
              if(!$scope.newVideoUrl || $scope.newVideoUrl.length < 1) return;
              
              var song = $scope.song;
              song.videoUrls.push($scope.newVideoUrl);
              Songs.update({id: song._id}, song);
              
              $scope.newVideoUrl = "";
          };
          
          $scope.updateVideoUrl = function(index) {
              var song = $scope.song;
              Songs.update({id: song._id}, song);
          };
          
          $scope.deleteVideoUrl = function(index){
              var song = $scope.song;
              song.videoUrls.splice(index, 1);
              Songs.update({id: song._id}, song);
          }
          
          //Comment
          $scope.saveComment = function(){
              if(!$scope.newComment || $scope.newComment.length < 1) return;
              
              var song = $scope.song;
              var commentObj = {};
              commentObj.body = $scope.newComment;
              song.comments.push(commentObj);
              Songs.update({id: song._id}, song);
              
              $scope.newComment = "";
          };
          
          $scope.updateComment = function(index) {
              var song = $scope.song;
              Songs.update({id: song._id}, song);
          };
          
          $scope.deleteComment = function(index){
              var song = $scope.song;
              song.comments.splice(index, 1);
              Songs.update({id: song._id}, song);
          }
          
          //alert($scope.song.audioUrls[0]);
          
          //if(Songs[$routeParams.id].audioUrls == undefined)
          //{
              //Songs[$routeParams.id].audioUrls = ['test'];
          //}
        }])

        //---------------
        // Routes
        //---------------

        .config(['$routeProvider', function ($routeProvider) {
          $routeProvider
            .when('/', {
              templateUrl: '/songs.html',
              controller: 'SongController'
            })

            .when('/:id', {
              templateUrl: '/songDetails.html',
              controller: 'SongDetailCtrl'
           });
        }]);
    </script>
  </body>
</html>